import {
  Fragment,
  Teleport,
  defineComponent,
  h
} from "./chunk-AVXPPHYR.js";

// node_modules/@schedule-x/vue/dist/schedule-x-vue.mjs
var d = (e, t) => (o, n) => {
  const m = {
    Component: h(t, n),
    wrapperElement: o
  };
  e(m);
};
var i = defineComponent({
  name: "ScheduleXCalendar",
  props: {
    calendarApp: {
      type: Object,
      required: true
    },
    customComponents: {
      type: Object,
      default: () => ({})
    }
  },
  data() {
    return {
      elId: "sx" + Math.random().toString(36).substr(2, 9),
      customComponentsMeta: []
    };
  },
  mounted() {
    const e = {
      ...this.customComponents,
      ...this.$slots
    };
    for (const [t, o] of Object.entries(e))
      this.calendarApp._setCustomComponentFn(t, d(this.setCustomComponentMeta, o));
    this.calendarApp.render(document.getElementById(this.elId));
  },
  methods: {
    setCustomComponentMeta(e) {
      const t = [...this.customComponentsMeta], o = e.wrapperElement.dataset.ccid, n = t.find(({ wrapperElement: m }) => m.dataset.ccid === o);
      n && t.splice(t.indexOf(n), 1), this.customComponentsMeta = [...t, e];
    }
  },
  render() {
    const e = this.customComponentsMeta.map(({ Component: t, wrapperElement: o }) => h(Teleport, { to: o }, t));
    return h("div", {
      id: this.elId,
      class: "sx-vue-calendar-wrapper"
    }, h(Fragment, {}, e));
  }
});
export {
  i as ScheduleXCalendar
};
//# sourceMappingURL=@schedule-x_vue.js.map
